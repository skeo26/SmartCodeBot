Question: Что такое абстракция в объектно-ориентированном программировании?
Options:
- Процесс создания новых объектов на основе старых
- Способ скрытия деталей реализации и предоставления только необходимого интерфейса
- Способ наследовать члены базового класса
- Механизм перегрузки методов
Explanation: Абстракция скрывает реализацию и предоставляет интерфейс для работы с объектом.
CorrectAnswerIndex: 1

Question: Какой из следующих элементов используется для реализации абстракции?
Options:
- Абстрактные классы и интерфейсы
- Только конструкторы
- Статические методы
- События
Explanation: Абстракция реализуется с помощью абстрактных классов и интерфейсов.
CorrectAnswerIndex: 0

Question: Что произойдёт, если попытаться создать объект абстрактного класса?
Options:
- Объект будет создан успешно
- Будет вызван конструктор по умолчанию
- Возникнет ошибка компиляции
- Объект будет создан, но не будет работать
Explanation: Нельзя создать экземпляр абстрактного класса напрямую — это приведёт к ошибке компиляции.
CorrectAnswerIndex: 2

Question: Какой метод обязан реализовать класс, наследующийся от абстрактного класса?
Options:
- Все виртуальные методы
- Только обычные методы
- Только методы с модификатором public
- Все абстрактные методы
Explanation: Класс-наследник обязан реализовать все абстрактные методы базового класса.
CorrectAnswerIndex: 3

Question: Какой из следующих примеров демонстрирует использование интерфейса?
Options:
- class Animal { public abstract void Speak(); }
- interface IDrawable { void Draw(); }
- class Dog : Animal { public override void Speak() {} }
- class Math { public static int Add(int a, int b) {} }
Explanation: Второй пример определяет интерфейс `IDrawable`, что является реализацией абстракции.
CorrectAnswerIndex: 1

Question: Что будет выведено в коде выше?
Code:
abstract class Animal
{
    public abstract void Speak();
    public void Sleep() { Console.WriteLine("Животное спит"); }
}
class Cat : Animal
{
    public override void Speak() { Console.WriteLine("Кошка мяукает"); }
}
Animal cat = new Cat();
cat.Speak();
cat.Sleep();
Options:
- Кошка мяукает
- Животное спит
- Кошка мяукает\nЖивотное спит
- Ошибка компиляции
Explanation: Метод `Speak()` переопределён, а `Sleep()` унаследован — оба выполняются.
CorrectAnswerIndex: 2

Question: Что отличает интерфейс от абстрактного класса?
Options:
- Интерфейс может содержать реализацию методов
- Абстрактный класс не может содержать обычные методы
- Класс может реализовывать несколько интерфейсов, но наследовать только один класс
- Интерфейс нельзя использовать в полиморфизме
Explanation: В C#, класс может реализовывать несколько интерфейсов, но только один базовый класс.
CorrectAnswerIndex: 2

Question: Как абстракция упрощает разработку программ?
Options:
- Позволяет скрыть реализацию и работать через понятный интерфейс
- Позволяет обойти компилятор
- Дает доступ к приватным полям
- Увеличивает количество кода
Explanation: Абстракция скрывает сложные детали и предоставляет простой интерфейс.
CorrectAnswerIndex: 0

Question: Какой модификатор используется для обозначения абстрактного метода?
Options:
- `override`
- `sealed`
- `virtual`
- `abstract`
Explanation: `abstract` — это модификатор, который делает метод абстрактным, без реализации.
CorrectAnswerIndex: 3
