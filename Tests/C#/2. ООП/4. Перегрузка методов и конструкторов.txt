Question: Что такое перегрузка (overloading) в C#?
Options:
- Использование одного и того же метода в разных классах
- Создание методов с разными именами
- Возможность создания нескольких методов или конструкторов с одним именем, но разными параметрами
- Создание копий объектов
Explanation: Перегрузка — это возможность определять несколько методов или конструкторов с одинаковым именем, но разной сигнатурой.
CorrectAnswerIndex: 2

Question: Какие параметры определяют перегрузку метода?
Options:
- Только возвращаемый тип
- Только количество параметров
- Имя метода и типы параметров
- Только модификаторы доступа
Explanation: Перегрузка определяется по сигнатуре метода, то есть по имени и параметрам (типам и количеству).
CorrectAnswerIndex: 2

Question: Можно ли перегрузить метод, изменив только возвращаемый тип?
Options:
- Да
- Нет
- Только в интерфейсе
- Только если метод статический
Explanation: Перегрузка по возвращаемому типу невозможна, так как он не входит в сигнатуру метода.
CorrectAnswerIndex: 1

Question: Что из перечисленного считается корректной перегрузкой?
Options:
- Метод с тем же именем, но другим количеством параметров
- Метод с тем же именем и параметрами, но другим телом
- Метод с другим именем
- Метод с тем же именем и тем же количеством параметров одного типа
Explanation: Перегрузка возможна, если меняется количество или тип параметров.
CorrectAnswerIndex: 0

Question: Что произойдёт, если попытаться создать два метода с одинаковой сигнатурой, но разным возвращаемым типом?
Options:
- Скомпилируется успешно
- Будет выбрана последняя версия
- Компилятор выдаст ошибку
- Методы будут перегружены
Explanation: Возвращаемый тип не учитывается при перегрузке — компилятор выдаст ошибку.
CorrectAnswerIndex: 2

Question: Что такое перегрузка конструктора?
Options:
- Создание копии конструктора
- Создание нескольких конструкторов с разными параметрами
- Вызов конструктора вручную
- Создание статического конструктора
Explanation: Перегрузка конструктора — это наличие нескольких конструкторов в одном классе с разной сигнатурой.
CorrectAnswerIndex: 1

Question: Какое преимущество даёт перегрузка методов?
Options:
- Увеличивает время компиляции
- Делает код более запутанным
- Позволяет использовать одно имя метода с разными параметрами
- Обязует использовать интерфейсы
Explanation: Перегрузка упрощает интерфейс класса и повышает читаемость, позволяя вызывать методы с одинаковым именем, но разными параметрами.
CorrectAnswerIndex: 2

Question: Может ли перегруженный метод быть как с параметрами, так и без них?
Options:
- Нет, только с параметрами
- Да
- Только если метод статический
- Только если он внутри конструктора
Explanation: Метод можно перегрузить, создав вариант без параметров и с параметрами — это корректная перегрузка.
CorrectAnswerIndex: 1

Question: Какой из следующих случаев НЕ является перегрузкой?
Options:
- Два метода с одинаковым именем и параметрами, но разным телом
- Метод с разным числом параметров
- Метод с разными типами параметров
- Метод с одинаковым именем и параметрами, но в разных классах
Explanation: Два метода с одинаковой сигнатурой в одном классе — это ошибка компиляции, а не перегрузка.
CorrectAnswerIndex: 0

Question: Почему перегрузка улучшает читаемость кода?
Options:
- Делает все методы приватными
- Уменьшает количество классов
- Позволяет использовать одно имя для разных задач
- Заменяет наследование
Explanation: Перегрузка позволяет использовать одно имя метода или конструктора в разных контекстах, не загромождая код новыми именами.
CorrectAnswerIndex: 2
