Question: Что делает модификатор public?
Options:
- Ограничивает доступ только текущим классом
- Делает член доступным везде, где доступен объект
- Разрешает доступ только из наследников
- Запрещает доступ к члену
Explanation: public делает член доступным из любого места, где виден объект или класс.
CorrectAnswerIndex: 1

Question: Где доступен член с модификатором private?
Options:
- Везде в программе
- Только внутри текущего класса
- Внутри класса и его наследников
- В любом проекте
Explanation: private ограничивает доступ только текущим классом.
CorrectAnswerIndex: 1

Question: Чем отличается protected от private?
Options:
- protected запрещает доступ из класса
- protected доступен в текущем классе и наследниках
- protected доступен только вне класса
- private всегда доступен в любом коде
Explanation: protected позволяет использовать член в классах-наследниках.
CorrectAnswerIndex: 1

Question: Где можно использовать модификатор internal?
Options:
- Только внутри метода
- В пределах сборки (проекта)
- Только в наследниках
- Внутри namespace
Explanation: internal означает доступ внутри одного проекта/сборки.
CorrectAnswerIndex: 1

Question: Что означает protected internal?
Options:
- Доступ только в производных классах вне проекта
- Доступ в пределах сборки и из производных классов
- Доступ только внутри метода
- Только в одном классе
Explanation: protected internal разрешает доступ в текущем проекте и наследниках.
CorrectAnswerIndex: 1

Question: В чём особенность private protected?
Options:
- Доступен только из другого проекта
- Доступен всем классам
- Доступен в текущем классе и производных классах в той же сборке
- Запрещает наследование
Explanation: private protected — комбинированный доступ: внутри класса и его наследников, но только в той же сборке.
CorrectAnswerIndex: 2

Question: Что произойдёт при попытке доступа к private полю из другого класса?
Options:
- Будет выведено значение
- Возникнет ошибка компиляции
- Поле станет public
- Скомпилируется, но выдаст предупреждение
Explanation: private запрещает доступ вне текущего класса, что вызывает ошибку компиляции.
CorrectAnswerIndex: 1

Question: Почему важно использовать модификаторы доступа?
Options:
- Для увеличения скорости работы программы
- Чтобы сделать код доступным всем
- Для контроля доступа и инкапсуляции
- Чтобы уменьшить объём кода
Explanation: Модификаторы позволяют скрывать детали реализации и управлять доступом к членам класса.
CorrectAnswerIndex: 2

Question: Какой модификатор следует использовать для внутренней логики класса?
Options:
- public
- protected internal
- private
- internal
Explanation: private — лучший выбор для логики, которую не нужно показывать другим классам.
CorrectAnswerIndex: 2

Question: Каким образом protected влияет на наследование?
Options:
- Делает наследование невозможным
- Разрешает доступ к членам класса только внутри сборки
- Позволяет наследующим классам использовать защищённые члены
- Разрешает доступ только извне
Explanation: protected предоставляет доступ к членам внутри производных классов.
CorrectAnswerIndex: 2
