Question: Какой из следующих принципов ООП позволяет скрыть внутреннюю реализацию и предоставлять только необходимый интерфейс?
Options:
- Наследование
- Полиморфизм
- Инкапсуляция
- Абстракция
Explanation: Инкапсуляция обеспечивает сокрытие деталей реализации и доступ к данным только через публичные методы.
CorrectAnswerIndex: 2

Question: Какой принцип ООП позволяет создавать новые классы на основе существующих?
Options:
- Полиморфизм
- Наследование
- Абстракция
- Инкапсуляция
Explanation: Наследование позволяет одному классу унаследовать свойства и методы другого.
CorrectAnswerIndex: 1

Question: Что из перечисленного лучше всего описывает абстракцию?
Options:
- Использование одного интерфейса для разных типов
- Сокрытие деталей реализации и выделение важного
- Наследование поведения от родительского класса
- Принудительная реализация методов
Explanation: Абстракция позволяет выделить важные характеристики объекта, скрывая второстепенные.
CorrectAnswerIndex: 1

Question: Какой из принципов ООП позволяет одному интерфейсу работать с разными типами данных?
Options:
- Инкапсуляция
- Абстракция
- Полиморфизм
- Наследование
Explanation: Полиморфизм позволяет одному интерфейсу взаимодействовать с объектами разных классов.
CorrectAnswerIndex: 2

Question: Что такое класс в контексте ООП?
Options:
- Модуль, хранящий функции
- Шаблон для создания объектов
- Объект, содержащий только данные
- Интерфейс между модулями
Explanation: Класс — это шаблон, по которому создаются объекты с определёнными свойствами и методами.
CorrectAnswerIndex: 1

Question: Что такое объект в ООП?
Options:
- Абстрактное представление данных
- Экземпляр класса
- Интерфейс между модулями
- Наследуемая сущность
Explanation: Объект — это конкретный экземпляр класса, созданный в памяти программы.
CorrectAnswerIndex: 1
