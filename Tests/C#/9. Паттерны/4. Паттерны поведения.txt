Question: Что делают поведенческие паттерны проектирования?
Options:
- Они помогают создавать объекты, не указывая их конкретные классы
- Они решают задачи взаимодействия объектов и отвечают за алгоритмы и ответственность объектов
- Они разделяют абстракцию и реализацию
- Они помогают улучшить взаимодействие между объектами и группировать их
Explanation: Поведенческие паттерны проектирования определяют взаимодействие объектов, обеспечивая гибкость и эффективность в их взаимодействии.
CorrectAnswerIndex: 1

Question: Что позволяет делать паттерн Стратегия?
Options:
- Изменять поведение объекта в зависимости от его состояния
- Выбирать алгоритм выполнения задачи в зависимости от контекста
- Уведомлять объекты о изменениях
- Инкапсулировать запросы как объекты
Explanation: Паттерн Стратегия позволяет выбирать алгоритм выполнения задачи в зависимости от контекста.
CorrectAnswerIndex: 1

Question: Какую задачу решает паттерн Команда?
Options:
- Инкапсулирует запрос как объект, поддерживая отмену операций
- Разделяет абстракцию и реализацию
- Позволяет выбирать алгоритм выполнения задачи в зависимости от контекста
- Уведомляет другие объекты об изменениях
Explanation: Паттерн Команда инкапсулирует запрос как объект, позволяя параметризовать объекты с запросами и поддерживать отмену операций.
CorrectAnswerIndex: 0

Question: Что позволяет делать паттерн Наблюдатель?
Options:
- Выбирать алгоритм выполнения задачи в зависимости от контекста
- Уведомлять объекты о изменениях без жесткой связи
- Изменять поведение объекта в зависимости от его состояния
- Инкапсулировать запросы как объекты
Explanation: Паттерн Наблюдатель позволяет объектам уведомлять других объектов об изменениях без жесткой связи.
CorrectAnswerIndex: 1

Question: Какую задачу решает паттерн Состояние?
Options:
- Позволяет изменять поведение объекта в зависимости от его состояния
- Инкапсулирует запросы как объекты
- Уведомляет объекты о изменениях
- Разделяет абстракцию и реализацию
Explanation: Паттерн Состояние изменяет поведение объекта в зависимости от его состояния, позволяя избежать длинных условных конструкций.
CorrectAnswerIndex: 0

Question: Когда следует использовать поведенческие паттерны?
Options:
- Когда необходимо улучшить взаимодействие между объектами
- Когда нужно гибко управлять поведением объектов и их взаимодействием
- Когда нужно разделить абстракцию и реализацию
- Когда необходимо создавать объекты без указания их классов
Explanation: Поведенческие паттерны полезны, когда нужно гибко управлять поведением объектов и их взаимодействием, минимизируя жесткие связи между ними.
CorrectAnswerIndex: 1

Question: Какой паттерн позволяет изменять поведение объекта в зависимости от его состояния?
Options:
- Стратегия
- Состояние
- Команда
- Наблюдатель
Explanation: Паттерн Состояние изменяет поведение объекта в зависимости от его состояния.
CorrectAnswerIndex: 1

Question: Что делает паттерн Стратегия?
Options:
- Он инкапсулирует запросы как объекты
- Он позволяет выбирать алгоритм выполнения задачи в зависимости от контекста
- Он управляет поведением объекта в зависимости от его состояния
- Он уведомляет другие объекты об изменениях
Explanation: Паттерн Стратегия позволяет выбирать алгоритм выполнения задачи в зависимости от контекста.
CorrectAnswerIndex: 1

Question: Какой паттерн используется для того, чтобы объекты могли уведомлять других объектов об изменениях без жесткой связи?
Options:
- Стратегия
- Команда
- Наблюдатель
- Состояние
Explanation: Паттерн Наблюдатель позволяет объектам уведомлять других объектов об изменениях без жесткой связи.
CorrectAnswerIndex: 2
