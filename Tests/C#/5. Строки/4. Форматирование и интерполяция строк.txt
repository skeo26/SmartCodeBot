Question: Какой способ форматирования строк наиболее читаемый и современный?
Options:
- Конкатенация строк
- String.Format()
- Интерполяция строк ($)
- StringBuilder
Explanation: Интерполяция строк с символом $ — самый читаемый и современный способ форматирования.
CorrectAnswerIndex: 2

Question: Что выведет следующий код?
string name = "Alice";
int age = 25;
Console.WriteLine("Имя: " + name + ", Возраст: " + age);
Options:
- Имя: Alice, Возраст: 25
- Alice25
- Имя: + name + , Возраст: + age
- Ошибка компиляции
Explanation: Конкатенация строк работает через знак + и подставляет значения переменных.
CorrectAnswerIndex: 0

Question: Какой синтаксис используется в методе String.Format()?
Options:
- "Имя: {name}"
- "Имя: {0}"
- $"Имя: {name}"
- "Имя: "+name
Explanation: String.Format использует шаблоны с номерами аргументов: {0}, {1}, и т.д.
CorrectAnswerIndex: 1

Question: Что означает формат {price:F2}?
Options:
- Округлить до двух целых
- Отображение числа с двумя знаками после запятой
- Преобразовать в валюту
- Умножить на 100
Explanation: Формат F2 отображает число с двумя знаками после запятой.
CorrectAnswerIndex: 1

Question: Что выведет следующий код?
double price = 1999.99;
Console.WriteLine($"Цена: {price:C}");
Options:
- Цена: 1999.99
- Цена: $1999.99
- Цена: 1 999,99 ₽ (или другая валюта по культуре)
- Ошибка компиляции
Explanation: Формат :C отображает число в виде валюты в зависимости от культуры системы.
CorrectAnswerIndex: 2

Question: Какой формат даты соответствует шаблону 10.04.2025?
Options:
- {now:yyyy-MM-dd}
- {now:MM.dd.yyyy}
- {now:dd.MM.yyyy}
- {now:HH:mm:ss}
Explanation: Формат dd.MM.yyyy отображает день, месяц и год в нужном порядке.
CorrectAnswerIndex: 2

Question: Что делает следующий код?
DateTime now = DateTime.Now;
Console.WriteLine($"Сегодня: {now:dddd}");
Options:
- Выводит номер дня недели
- Выводит полное название дня недели (например, "Thursday")
- Ошибка компиляции
- Выводит текущую дату в числовом формате
Explanation: Формат dddd возвращает полное название текущего дня недели.
CorrectAnswerIndex: 1

Question: Для чего используется интерполяция строк?
Options:
- Для ввода данных
- Для хранения массивов
- Для подстановки значений переменных в строку
- Для форматирования дат только
Explanation: Интерполяция строк позволяет удобно подставлять переменные прямо в строку.
CorrectAnswerIndex: 2

Question: Что выведет код?
string name = "Tom";
int score = 1500;
Console.WriteLine($"Игрок {name} набрал {score} очков.");
Options:
- Игрок {name} набрал {score} очков.
- Игрок Tom набрал 1500 очков.
- Tom1500
- Ошибка компиляции
Explanation: Интерполяция строки подставляет значения переменных прямо в текст.
CorrectAnswerIndex: 1

Question: Когда следует использовать форматирование или интерполяцию строк?
Options:
- Только при работе с числами
- Для записи данных в файл
- При выводе, логировании, генерации отчётов
- Только для отладки
Explanation: Форматирование удобно при отображении данных, логировании, генерации сообщений и отчётов.
CorrectAnswerIndex: 2
