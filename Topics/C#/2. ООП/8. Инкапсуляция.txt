<b>Что такое инкапсуляция?</b>

Инкапсуляция — это механизм сокрытия данных и реализации от внешнего мира. Она позволяет управлять доступом к полям и методам класса, защищая внутреннее состояние объекта.

<b>Ключевые идеи:</b>
- Скрытие реализации (детали внутри класса недоступны снаружи)
- Управление доступом через модификаторы доступа
- Использование свойств (properties) вместо прямого доступа к полям

<b>Пример без инкапсуляции:</b>
<pre><code>class Person
{
    public string Name;
    public int Age;
}
</code></pre>

В этом примере поля открыты и могут быть изменены извне без контроля.

<b>Пример с инкапсуляцией:</b>
<pre><code>class Person
{
    private string name;
    private int age;

    public string Name
    {
        get { return name; }
        set { name = value; }
    }

    public int Age
    {
        get { return age; }
        set
        {
            if (value >= 0)
                age = value;
        }
    }
}
</code></pre>

<b>Использование:</b>
<pre><code>Person person = new Person();
person.Name = "Alice";
person.Age = 25;
</code></pre>

Теперь доступ к полям осуществляется через свойства, и можно встроить проверку значений.

<b>Автоматические свойства:</b>
Если дополнительная логика не нужна, можно использовать автоматические свойства:

<pre><code>class Student
{
    public string Name { get; set; }
    public int Grade { get; set; }
}
</code></pre>

<b>Преимущества инкапсуляции:</b>
- Контроль над доступом к данным
- Упрощение отладки и сопровождения кода
- Безопасность и устойчивость программы к ошибкам

<b>Итог:</b>
Инкапсуляция помогает создавать надёжные и предсказуемые классы, скрывая детали реализации и предоставляя безопасный интерфейс для взаимодействия
