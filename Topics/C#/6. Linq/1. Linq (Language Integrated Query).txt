<b>LINQ (Language Integrated Query)</b> ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –¥–∞–Ω–Ω—ã—Ö –≤ C# —Å –ø–æ–º–æ—â—å—é –≤—ã—Ä–∞–∂–µ–Ω–∏–π, –Ω–∞–ø–æ–º–∏–Ω–∞—é—â–∏—Ö SQL-–∑–∞–ø—Ä–æ—Å—ã.

<b>LINQ –ø–æ–∑–≤–æ–ª—è–µ—Ç:</b>
- –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å, –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
- –í—ã–ø–æ–ª–Ω—è—Ç—å –∞–≥—Ä–µ–≥–∞—Ü–∏—é (Count, Sum, Average –∏ —Ç.–¥.)
- –†–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –≤ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ–º —Å—Ç–∏–ª–µ

<b>–ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ LINQ-–∑–∞–ø—Ä–æ—Å–∞:</b>

<pre><code>var result = from item in collection
             where item.–£—Å–ª–æ–≤–∏–µ
             select item;</code></pre>

---

### üì¶ <b>–ü—Ä–∏–º–µ—Ä: LINQ —Å –º–∞—Å—Å–∏–≤–æ–º —á–∏—Å–µ–ª</b>

<pre><code>int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

// –ù–∞–π—Ç–∏ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞
var evenNumbers = from n in numbers
                  where n % 2 == 0
                  select n;

foreach (var num in evenNumbers)
{
    Console.WriteLine(num); // 2, 4, 6, 8, 10
}</code></pre>

---

### üõ† <b>–ú–µ—Ç–æ–¥—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è LINQ</b>

LINQ —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –≤–∏–¥–µ —Ü–µ–ø–æ—á–µ–∫ –º–µ—Ç–æ–¥–æ–≤ (method syntax):

<pre><code>List&lt;string&gt; names = new List&lt;string&gt; { "Alice", "Bob", "Charlie", "Ann" };

var aNames = names
    .Where(name =&gt; name.StartsWith("A"))
    .OrderBy(name =&gt; name);

foreach (var name in aNames)
{
    Console.WriteLine(name); // Alice, Ann
}</code></pre>

---

### üìå <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã LINQ:</b>

- <code>Where(predicate)</code> ‚Äî —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤  
- <code>Select(selector)</code> ‚Äî –ø—Ä–æ–µ–∫—Ü–∏—è (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)  
- <code>OrderBy / OrderByDescending</code> ‚Äî —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞  
- <code>First / FirstOrDefault</code> ‚Äî –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç  
- <code>Any / All</code> ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è  
- <code>Count / Sum / Average / Max / Min</code> ‚Äî –∞–≥—Ä–µ–≥–∞—Ç—ã  
- <code>GroupBy</code> ‚Äî –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞  

---

### üß™ <b>–ü—Ä–∏–º–µ—Ä —Å –æ–±—ä–µ–∫—Ç–∞–º–∏</b>

<pre><code>class Student
{
    public string Name { get; set; }
    public int Grade { get; set; }
}

var students = new List&lt;Student&gt;
{
    new Student { Name = "Alice", Grade = 85 },
    new Student { Name = "Bob", Grade = 92 },
    new Student { Name = "Charlie", Grade = 78 }
};

var highScorers = students
    .Where(s =&gt; s.Grade &gt;= 80)
    .Select(s =&gt; s.Name);

foreach (var name in highScorers)
{
    Console.WriteLine(name); // Alice, Bob
}</code></pre>

---

### ‚úÖ <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ LINQ:</b>

- –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ —á–∏—Ç–∞–µ–º—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å  
- –£–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏  
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–µ–π (—Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)  
- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å: –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å –º–∞—Å—Å–∏–≤–∞–º–∏, —Å–ø–∏—Å–∫–∞–º–∏, XML, –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏ —Ç.–¥.

---

–ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Ç–µ–º–æ–π –ø–æ LINQ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞–∑–¥–µ–ª—É?
